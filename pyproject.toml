[project]
name = "chempare"
version = "0.0.1"
description = "Reagent search utility"
authors = [{ name = "Justin Hyland", email = "j@linux.com" }]
maintainers = [{ name = "Justin Hyland", email = "j@linux.com" }]
readme = { file = "README.txt", content-type = "text/markdown" }
keywords = ["chemistry", "chemicals", "reagent", "reagents"]
dependencies = [
	"requests",
	"bs4",
	"rich",
	"abcplus",
	"typing",
	"enum34",
	"urllib3==1.26.6",
	"dataclasses",
	"numpy",
	"pathlib",
	"curl_cffi",
	"translate",
	"regex",
]

[project.urls]
Homepage = "https://github.com/YourHeatingMantle/ChemPare"
Documentation = "https://github.com/YourHeatingMantle/ChemPare/tree/main/documentation"
Repository = "https://github.com/YourHeatingMantle/ChemPare.git"

[project.optional-dependencies]
test = [
	"pytest",
	"pytest-cov",
	"pytest-xdist",
	"pylint-pytest",
	"pytest-instafail",
	"pytest-timeout",
	"pytest-pycodestyle",
	"pytest-env",
	"pycodestyle==2.4.0",
]

dev = ["pycodestyle==2.4.0"]

[project.scripts]
foo = "chempare.chempare_cli:main"
bar = "chempare_cli:main"

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.black]
# See https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#t-target-version
target-version = ["py39", "py310", "py311", "py312", "py313"]

[tool.setuptools]
packages = ["chempare"]


[tool.setuptools.package-data]
chempare_cli = ["chempare/*", "chempare/*/*"]
"pytest" = ["py.typed"]

[tool.setuptools_scm]
write_to = "chempare/_pytest/_version.py"


[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-rx -q -rx -n auto --color=yes --code-highlight=yes --cov=chempare"

# -vvv --capture=tee-sys -rx -n auto --color=yes --code-highlight=yes --cov=chempare --cov=chempare/* --cov=chempare/*/* --cov-config=.coveragerc tests
testpaths = ["tests"]
pythonpath = [".", "chempare", "chempare/suppliers", "chempare/datatypes"]
# addopts = "-rfEX -p pytester --strict-markers"
python_files = ["test_*.py", "tests/*.py", "tests/*/*.py"]
# python_classes = [
#     "Test",
#     "Acceptance",
# ]
# python_functions = [
#     "test",
# ]
# norecursedirs = [
#     "testing/example_scripts",
#     ".*",
#     "build",
#     "dist",
# ]
xfail_strict = true
# filterwarnings = [
#     "error",
#     "default:Using or importing the ABCs:DeprecationWarning:unittest2.*",
#     # produced by older pyparsing<=2.2.0.
#     "default:Using or importing the ABCs:DeprecationWarning:pyparsing.*",
#     "default:the imp module is deprecated in favour of importlib:DeprecationWarning:nose.*",
#     # distutils is deprecated in 3.10, scheduled for removal in 3.12
#     "ignore:The distutils package is deprecated:DeprecationWarning",
#     # produced by pytest-xdist
#     "ignore:.*type argument to addoption.*:DeprecationWarning",
#     # produced on execnet (pytest-xdist)
#     "ignore:.*inspect.getargspec.*deprecated, use inspect.signature.*:DeprecationWarning",
#     # pytest's own futurewarnings
#     "ignore::pytest.PytestExperimentalApiWarning",
#     # Do not cause SyntaxError for invalid escape sequences in py37.
#     # Those are caught/handled by pyupgrade, and not easy to filter with the
#     # module being the filename (with .py removed).
#     "default:invalid escape sequence:DeprecationWarning",
#     # ignore not yet fixed warnings for hook markers
#     "default:.*not marked using pytest.hook.*",
#     "ignore:.*not marked using pytest.hook.*::xdist.*",
#     # ignore use of unregistered marks, because we use many to test the implementation
#     "ignore::_pytest.warning_types.PytestUnknownMarkWarning",
#     # https://github.com/benjaminp/six/issues/341
#     "ignore:_SixMetaPathImporter\\.exec_module\\(\\) not found; falling back to load_module\\(\\):ImportWarning",
#     # https://github.com/benjaminp/six/pull/352
#     "ignore:_SixMetaPathImporter\\.find_spec\\(\\) not found; falling back to find_module\\(\\):ImportWarning",
#     # https://github.com/pypa/setuptools/pull/2517
#     "ignore:VendorImporter\\.find_spec\\(\\) not found; falling back to find_module\\(\\):ImportWarning",
#     # https://github.com/pytest-dev/execnet/pull/127
#     "ignore:isSet\\(\\) is deprecated, use is_set\\(\\) instead:DeprecationWarning",
#     # https://github.com/pytest-dev/pytest/issues/2366
#     # https://github.com/pytest-dev/pytest/pull/13057
#     "default::pytest.PytestFDWarning",
# ]
#pytester_example_dir = "testing/example_scripts"
markers = ["supplier", "webtest", "first", "second"]
